<?php

use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Carbon\Carbon;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Facades\DB;
use PHPUnit\ExampleExtension\TestCaseTrait;


class MessageTest extends TestCase
{
    use DatabaseTransactions;


    public function getDataSet()
    {
        return $this->createFlatXmlDataSet('MessageTest_db_prep_data.xml');
    }

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        Artisan::call('migrate:refresh');
        Artisan::call('db:seed');
    }

    /**
     * A basic test example.
     *
     * @return void
     */
    public function test_comment()
    {

        $data = [
            'content' => 'First message',
            'owner_id' => 2,
            'event_id' => 25,
            'time_sent' => Carbon::now()->format('Y-m-d H:i:s'),
        ];
        $this->json('POST', "api/messages", $data)->assertStatus(200)->decodeResponseJson();
    }

    public function test_delete()
    {
        $lastMessage = DB::table(config('constants.messages_table'))->orderBy('time_sent', 'desc')->first();
        if (is_null($lastMessage)) {
            $this->markTestSkipped('This test is skipped due to no message being available');
        }
        $response = $this->call('DELETE', "api/messages/" . $lastMessage->id . "/" . $lastMessage->owner_id);
        $response->assertStatus(200);
    }

    public function test_edit()
    {
        //TODO
    }
}


